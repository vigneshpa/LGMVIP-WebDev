{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["loading","className","App","props","state","users","a","this","setState","fetch","json","data","onClick","getUsers","map","user","width","height","src","avatar","first_name","last_name","email","id","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAGMA,EACJ,sBAAKC,UAAU,eAAf,UACE,wBACA,wBACA,wBACA,2BAGEC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPL,SAAS,GAJM,E,mFAOnB,4BAAAM,EAAA,6DACEC,KAAKC,SAAS,CAAEH,MAAO,GAAIL,SAAS,IADtC,SAE8BS,MAAM,sCAFpC,8BAE2EC,OAF3E,OAEQL,EAFR,OAEmFM,KACjFJ,KAAKC,SAAS,CAAEH,QAAOL,SAAS,IAHlC,gD,0EAKA,WAAU,IAAD,OACP,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAf,SACE,wBAAQW,QAAS,kBAAM,EAAKC,YAA5B,0BAEsB,IAAvBN,KAAKH,MAAMJ,SAAoB,qBAAKC,UAAU,UAAf,SAA0BD,IAC1D,qBAAKC,UAAU,QAAf,SACGM,KAAKH,MAAMC,MAAMS,KAAI,SAAAC,GACpB,OACE,gCACE,qBAAKd,UAAU,cAAce,MAAM,MAAMC,OAAO,MAAhD,SACE,8BACE,qBAAKC,IAAKH,EAAKI,aAGnB,sBAAKlB,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SAA6Bc,EAAKK,aAClC,qBAAKnB,UAAU,YAAf,SAA4Bc,EAAKM,YACjC,qBAAKpB,UAAU,aAAf,SAA6Bc,EAAKO,aAT5BP,EAAKQ,gB,GAvBXC,aA2CHtB,IC1CAuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dbd70d8a.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.css';\n\nconst loading = (\n  <div className=\"lds-ellipsis\">\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n);\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      loading: false,\n    };\n  }\n  async getUsers() {\n    this.setState({ users: [], loading: true });\n    const users = (await (await fetch('https://reqres.in/api/users?page=1')).json()).data;\n    this.setState({ users, loading: false });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"nav\">\n          <button onClick={() => this.getUsers()}>Get Users</button>\n        </div>\n        {this.state.loading === true && <div className=\"loading\">{loading}</div>}\n        <div className=\"users\">\n          {this.state.users.map(user => {\n            return (\n              <div key={user.id}>\n                <div className=\"user_avatar\" width=\"128\" height=\"128\">\n                  <div>\n                    <img src={user.avatar}></img>\n                  </div>\n                </div>\n                <div className=\"user_details\">\n                  <div className=\"first_name\">{user.first_name}</div>\n                  <div className=\"last_name\">{user.last_name}</div>\n                  <div className=\"user_email\">{user.email}</div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}